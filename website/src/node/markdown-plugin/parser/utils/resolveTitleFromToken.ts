import type Token from 'markdown-it/lib/token';

import { htmlEscape } from './htmlEscape';

/**
 * Resolve header title from `markdown-it` token. Typically using the next token of
 * `heading_open` token.
 */
export const resolveTitleFromToken = (
  token: Token,
  {
    allowHtml,
    escapeText,
  }: {
    allowHtml: boolean;
    escapeText: boolean;
  },
): string => {
  // Children of the token contains the parsed result of the heading title.
  const children = token.children ?? [];

  // Type of tokens to be included in the heading title.
  const titleTokenTypes = ['text', 'emoji', 'code_inline'];

  // Include 'html_inline' or not.
  if (allowHtml) {
    titleTokenTypes.push('html_inline');
  }

  // Filter the token type to be included in the title.
  const titleTokens = children.filter(
    (item) =>
      titleTokenTypes.includes(item.type) &&
      // Filter permalink symbol that generated by `markdown-it-anchor`.
      !item.meta?.isPermalinkSymbol,
  );

  // Get title from tokens.
  return titleTokens
    .reduce((result, item) => {
      if (escapeText) {
        // Escape the content of 'code_inline' and 'text'.
        if (item.type === 'code_inline' || item.type === 'text') {
          return `${result}${htmlEscape(item.content)}`;
        }
      }

      // Keep the content of 'emoji' and 'html_inline'.
      return `${result}${item.content}`;
    }, '')
    .trim();
};
