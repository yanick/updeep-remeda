import{S as ln,i as pn,s as on,k as t,q as y,a as F,w as A,l as r,m as c,r as D,h as n,c as C,x as f,n as U,b as o,W as l,y as u,f as m,t as d,z as $,a2 as tn}from"../../../../chunks/singletons-79165f10.js";import{L as vs,I as rn,a as Gs,C as ss}from"../../../../chunks/Info-8cb253a1.js";function cn(b){let e;return{c(){e=y("#")},l(p){e=D(p,"#")},m(p,i){o(p,e,i)},d(p){p&&n(e)}}}function yn(b){let e,p,i,g,_;return i=new ss({props:{code:"updeep"}}),{c(){e=t("p"),p=y(`This is a fork of the main updeep package. For ease of reading — not to
mention ease of shamelessly lifting large pieces of the original
documentation — in this documentation all mentions of `),A(i.$$.fragment),g=y(` refers to this
fork.`)},l(h){e=r(h,"P",{});var E=c(e);p=D(E,`This is a fork of the main updeep package. For ease of reading — not to
mention ease of shamelessly lifting large pieces of the original
documentation — in this documentation all mentions of `),f(i.$$.fragment,E),g=D(E,` refers to this
fork.`),E.forEach(n)},m(h,E){o(h,e,E),l(e,p),u(i,e,null),l(e,g),_=!0},p:tn,i(h){_||(m(i.$$.fragment,h),_=!0)},o(h){d(i.$$.fragment,h),_=!1},d(h){h&&n(e),$(i)}}}function Dn(b){let e;return{c(){e=y("#")},l(p){e=D(p,"#")},m(p,i){o(p,e,i)},d(p){p&&n(e)}}}function Fn(b){let e;return{c(){e=y("#")},l(p){e=D(p,"#")},m(p,i){o(p,e,i)},d(p){p&&n(e)}}}function Cn(b){let e;return{c(){e=y("#")},l(p){e=D(p,"#")},m(p,i){o(p,e,i)},d(p){p&&n(e)}}}function An(b){let e,p,i,g,_,h,E,w,j,ks,Cs,P,As,J,ws,fs,V,qs,us,X,xs,ms,q,z,Is,ds,v,ns,as,js,Ps,es,ls,zs,Ts,ps,os,Ls,$s,O,T,ts,k,S,Rs,H,Bs,M,Us,Os,rs,L,N,Ss,K,Hs,hs,x,R,Ms,bs,Q,I,B,Ns,Es,W,gs;return j=new vs({props:{class:"header-anchor",href:"#about","aria-hidden":"true",$$slots:{default:[cn]},$$scope:{ctx:b}}}),P=new rn({props:{$$slots:{default:[yn]},$$scope:{ctx:b}}}),z=new vs({props:{class:"header-anchor",href:"#differences-with-the-original-updeep","aria-hidden":"true",$$slots:{default:[Dn]},$$scope:{ctx:b}}}),O=new Gs({props:{lang:"javascript",ext:"js",linesCount:10,code:`<pre><code><span class="line"><span style="color: #676E95">// original updeep</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> dataIn </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">a</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">b</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> dataOut </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">u</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">c</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD"> dataIn)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95">// simple call</span></span>
<span class="line"><span style="color: #A6ACCD">dataOut </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">u</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">c</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)(dataIn)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95">// curried</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95">// updeep-remeda</span></span>
<span class="line"><span style="color: #A6ACCD">dataOut </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">u</span><span style="color: #A6ACCD">(dataIn</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">c</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95">// simple call</span></span>
<span class="line"><span style="color: #A6ACCD">dataOut </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">u</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">c</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)(dataIn)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95">// curried</span></span>
<span class="line"></span></code></pre>`}}),S=new ss({props:{code:"withDefault"}}),H=new ss({props:{code:"pipe"}}),M=new ss({props:{code:"??"}}),N=new ss({props:{code:"u.omitted"}}),K=new ss({props:{code:"u.skip"}}),R=new vs({props:{class:"header-anchor",href:"#installation","aria-hidden":"true",$$slots:{default:[Fn]},$$scope:{ctx:b}}}),Q=new Gs({props:{lang:"bash",ext:"sh",linesCount:4,code:`<pre><code><span class="line"><span style="color: #A6ACCD">$ npm install @yanick/updeep-remeda</span></span>
<span class="line"><span style="color: #676E95"># or</span></span>
<span class="line"><span style="color: #A6ACCD">$ pnpm install @yanick/updeep-remeda</span></span>
<span class="line"></span></code></pre>`}}),B=new vs({props:{class:"header-anchor",href:"#full-example","aria-hidden":"true",$$slots:{default:[Cn]},$$scope:{ctx:b}}}),W=new Gs({props:{lang:"javascript",ext:"js",linesCount:42,code:`<pre><code><span class="line"><span style="color: #89DDFF">import</span><span style="color: #A6ACCD"> u </span><span style="color: #89DDFF">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">@yanick/updeep-remeda</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> person </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">first</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Bill</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">last</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Sagat</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">children</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Mary-Kate</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Ashley</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">todo</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Be funny</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Manage household</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">email</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">bill@example.com</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">version</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> inc </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> eq </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">x</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">y</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> x </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> y</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> newPerson </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">u</span><span style="color: #A6ACCD">(person</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #676E95">// Change first name</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">first</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Bob</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #676E95">// Increment all children&#39;s ages</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">children</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> u</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">map</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> inc </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #676E95">// Update email</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">email</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">bob@example.com</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #676E95">// Remove todo</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">todo</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> u</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">reject</span><span style="color: #A6ACCD">(</span><span style="color: #82AAFF">eq</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Be funny</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">))</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #676E95">// Increment version</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">version</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> inc</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #676E95">// =&gt; {</span></span>
<span class="line"><span style="color: #676E95">//  name: { first: &#39;Bob&#39;, last: &#39;Sagat&#39; },</span></span>
<span class="line"><span style="color: #676E95">//  children: [</span></span>
<span class="line"><span style="color: #676E95">//    { name: &#39;Mary-Kate&#39;, age: 8 },</span></span>
<span class="line"><span style="color: #676E95">//    { name: &#39;Ashley&#39;, age: 8 }</span></span>
<span class="line"><span style="color: #676E95">//  ],</span></span>
<span class="line"><span style="color: #676E95">//  todo: [</span></span>
<span class="line"><span style="color: #676E95">//    &#39;Manage household&#39;</span></span>
<span class="line"><span style="color: #676E95">//  ],</span></span>
<span class="line"><span style="color: #676E95">//  email: &#39;bob@example.com&#39;,</span></span>
<span class="line"><span style="color: #676E95">//  version: 2</span></span>
<span class="line"><span style="color: #676E95">//}</span></span>
<span class="line"></span></code></pre>`}}),{c(){e=t("h1"),p=y("updeep-remeda"),i=F(),g=t("blockquote"),_=t("p"),h=y(`Easily update nested frozen objects and arrays in a declarative and immutable
manner.`),E=F(),w=t("h2"),A(j.$$.fragment),ks=y(" About"),Cs=F(),A(P.$$.fragment),As=F(),J=t("p"),ws=y(`updeep makes updating deeply nested objects/arrays painless by allowing you to
declare the updates you would like to make and it will take care of the rest. It
will recursively return the same instance if no changes have been made, making
it ideal for using reference equality checks to detect changes.`),fs=F(),V=t("p"),qs=y(`Because of this, everything returned by updeep is frozen. Not only that, but
updeep assumes that every object passed in to update is immutable, so it may
freeze objects passed in as well. Note that the freezing only happens in
development.`),us=F(),X=t("p"),xs=y("This fork of updeep requires Remeda, but works very well with any other utility function ([lodash], [Ramda], etc)."),ms=F(),q=t("h2"),A(z.$$.fragment),Is=y(" Differences with the original Updeep"),ds=F(),v=t("ul"),ns=t("li"),as=t("p"),js=y(`Under the hood, the use of lodash has
been replaced by Remeda (for better type support and tree-shaking abilities).`),Ps=F(),es=t("li"),ls=t("p"),zs=y("The codebase has been ported to TypeScript (mostly for the lulz)."),Ts=F(),ps=t("li"),os=t("p"),Ls=y("The order of parameters in the non-curryied invocation of functions has been modified. In the original updeep the input object is the last parameter, whereas here it's the first."),$s=F(),A(O.$$.fragment),T=t("ul"),ts=t("li"),k=t("p"),A(S.$$.fragment),Rs=y(` has been removed as the behavior can be implemented using
Remeda's `),A(H.$$.fragment),Bs=y(", or a simple "),A(M.$$.fragment),Us=y("."),Os=F(),rs=t("li"),L=t("p"),A(N.$$.fragment),Ss=y(" has been renamed "),A(K.$$.fragment),Hs=y("."),hs=F(),x=t("h2"),A(R.$$.fragment),Ms=y(" Installation"),bs=F(),A(Q.$$.fragment),I=t("h2"),A(B.$$.fragment),Ns=y(" Full example"),Es=F(),A(W.$$.fragment),this.h()},l(s){e=r(s,"H1",{});var a=c(e);p=D(a,"updeep-remeda"),a.forEach(n),i=C(s),g=r(s,"BLOCKQUOTE",{});var cs=c(g);_=r(cs,"P",{});var ys=c(_);h=D(ys,`Easily update nested frozen objects and arrays in a declarative and immutable
manner.`),ys.forEach(n),cs.forEach(n),E=C(s),w=r(s,"H2",{id:!0,tabindex:!0});var Y=c(w);f(j.$$.fragment,Y),ks=D(Y," About"),Y.forEach(n),Cs=C(s),f(P.$$.fragment,s),As=C(s),J=r(s,"P",{});var Ds=c(J);ws=D(Ds,`updeep makes updating deeply nested objects/arrays painless by allowing you to
declare the updates you would like to make and it will take care of the rest. It
will recursively return the same instance if no changes have been made, making
it ideal for using reference equality checks to detect changes.`),Ds.forEach(n),fs=C(s),V=r(s,"P",{});var is=c(V);qs=D(is,`Because of this, everything returned by updeep is frozen. Not only that, but
updeep assumes that every object passed in to update is immutable, so it may
freeze objects passed in as well. Note that the freezing only happens in
development.`),is.forEach(n),us=C(s),X=r(s,"P",{});var Js=c(X);xs=D(Js,"This fork of updeep requires Remeda, but works very well with any other utility function ([lodash], [Ramda], etc)."),Js.forEach(n),ms=C(s),q=r(s,"H2",{id:!0,tabindex:!0});var Ks=c(q);f(z.$$.fragment,Ks),Is=D(Ks," Differences with the original Updeep"),Ks.forEach(n),ds=C(s),v=r(s,"UL",{});var Z=c(v);ns=r(Z,"LI",{});var Vs=c(ns);as=r(Vs,"P",{});var Xs=c(as);js=D(Xs,`Under the hood, the use of lodash has
been replaced by Remeda (for better type support and tree-shaking abilities).`),Xs.forEach(n),Vs.forEach(n),Ps=C(Z),es=r(Z,"LI",{});var Ys=c(es);ls=r(Ys,"P",{});var Zs=c(ls);zs=D(Zs,"The codebase has been ported to TypeScript (mostly for the lulz)."),Zs.forEach(n),Ys.forEach(n),Ts=C(Z),ps=r(Z,"LI",{});var sn=c(ps);os=r(sn,"P",{});var nn=c(os);Ls=D(nn,"The order of parameters in the non-curryied invocation of functions has been modified. In the original updeep the input object is the last parameter, whereas here it's the first."),nn.forEach(n),sn.forEach(n),Z.forEach(n),$s=C(s),f(O.$$.fragment,s),T=r(s,"UL",{});var _s=c(T);ts=r(_s,"LI",{});var an=c(ts);k=r(an,"P",{});var G=c(k);f(S.$$.fragment,G),Rs=D(G,` has been removed as the behavior can be implemented using
Remeda's `),f(H.$$.fragment,G),Bs=D(G,", or a simple "),f(M.$$.fragment,G),Us=D(G,"."),G.forEach(n),an.forEach(n),Os=C(_s),rs=r(_s,"LI",{});var en=c(rs);L=r(en,"P",{});var Fs=c(L);f(N.$$.fragment,Fs),Ss=D(Fs," has been renamed "),f(K.$$.fragment,Fs),Hs=D(Fs,"."),Fs.forEach(n),en.forEach(n),_s.forEach(n),hs=C(s),x=r(s,"H2",{id:!0,tabindex:!0});var Qs=c(x);f(R.$$.fragment,Qs),Ms=D(Qs," Installation"),Qs.forEach(n),bs=C(s),f(Q.$$.fragment,s),I=r(s,"H2",{id:!0,tabindex:!0});var Ws=c(I);f(B.$$.fragment,Ws),Ns=D(Ws," Full example"),Ws.forEach(n),Es=C(s),f(W.$$.fragment,s),this.h()},h(){U(w,"id","about"),U(w,"tabindex","-1"),U(q,"id","differences-with-the-original-updeep"),U(q,"tabindex","-1"),U(x,"id","installation"),U(x,"tabindex","-1"),U(I,"id","full-example"),U(I,"tabindex","-1")},m(s,a){o(s,e,a),l(e,p),o(s,i,a),o(s,g,a),l(g,_),l(_,h),o(s,E,a),o(s,w,a),u(j,w,null),l(w,ks),o(s,Cs,a),u(P,s,a),o(s,As,a),o(s,J,a),l(J,ws),o(s,fs,a),o(s,V,a),l(V,qs),o(s,us,a),o(s,X,a),l(X,xs),o(s,ms,a),o(s,q,a),u(z,q,null),l(q,Is),o(s,ds,a),o(s,v,a),l(v,ns),l(ns,as),l(as,js),l(v,Ps),l(v,es),l(es,ls),l(ls,zs),l(v,Ts),l(v,ps),l(ps,os),l(os,Ls),o(s,$s,a),u(O,s,a),o(s,T,a),l(T,ts),l(ts,k),u(S,k,null),l(k,Rs),u(H,k,null),l(k,Bs),u(M,k,null),l(k,Us),l(T,Os),l(T,rs),l(rs,L),u(N,L,null),l(L,Ss),u(K,L,null),l(L,Hs),o(s,hs,a),o(s,x,a),u(R,x,null),l(x,Ms),o(s,bs,a),u(Q,s,a),o(s,I,a),u(B,I,null),l(I,Ns),o(s,Es,a),u(W,s,a),gs=!0},p(s,[a]){const cs={};a&1&&(cs.$$scope={dirty:a,ctx:s}),j.$set(cs);const ys={};a&1&&(ys.$$scope={dirty:a,ctx:s}),P.$set(ys);const Y={};a&1&&(Y.$$scope={dirty:a,ctx:s}),z.$set(Y);const Ds={};a&1&&(Ds.$$scope={dirty:a,ctx:s}),R.$set(Ds);const is={};a&1&&(is.$$scope={dirty:a,ctx:s}),B.$set(is)},i(s){gs||(m(j.$$.fragment,s),m(P.$$.fragment,s),m(z.$$.fragment,s),m(O.$$.fragment,s),m(S.$$.fragment,s),m(H.$$.fragment,s),m(M.$$.fragment,s),m(N.$$.fragment,s),m(K.$$.fragment,s),m(R.$$.fragment,s),m(Q.$$.fragment,s),m(B.$$.fragment,s),m(W.$$.fragment,s),gs=!0)},o(s){d(j.$$.fragment,s),d(P.$$.fragment,s),d(z.$$.fragment,s),d(O.$$.fragment,s),d(S.$$.fragment,s),d(H.$$.fragment,s),d(M.$$.fragment,s),d(N.$$.fragment,s),d(K.$$.fragment,s),d(R.$$.fragment,s),d(Q.$$.fragment,s),d(B.$$.fragment,s),d(W.$$.fragment,s),gs=!1},d(s){s&&n(e),s&&n(i),s&&n(g),s&&n(E),s&&n(w),$(j),s&&n(Cs),$(P,s),s&&n(As),s&&n(J),s&&n(fs),s&&n(V),s&&n(us),s&&n(X),s&&n(ms),s&&n(q),$(z),s&&n(ds),s&&n(v),s&&n($s),$(O,s),s&&n(T),$(S),$(H),$(M),$(N),$(K),s&&n(hs),s&&n(x),$(R),s&&n(bs),$(Q,s),s&&n(I),$(B),s&&n(Es),$(W,s)}}}class mn extends ln{constructor(e){super(),pn(this,e,null,An,on,{})}}export{mn as default};
